{"version":3,"sources":["users/UserAvatar.jsx","users/DescriptionBox.jsx","users/Description.jsx","users/ContactItem.jsx","users/ContactList.jsx","users/CreateUserCard.jsx","statistics/StatList.jsx","statistics/CreateStatistics.jsx","FriendList/Li_friendList.jsx","FriendList/CreateFriendList.jsx","Transactions/Content.jsx","Transactions/CreateTransactions.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["UserAvatar","props","name","avatar","src","alt","className","DescriptionBox","content","Description","tag","location","ContactList","label","quantity","followers","stats","views","likes","ContactItem","CreateUserCard","user","colorArr","colorNext","n","length","max","count","Color","StatList","i","datalist","data","map","iterator","id","toString","percentage","style","backgroundColor","Statistics","dataItem","Li_friendList","friends","elem","isOnline","width","FriendList","CastomId","lostId","LetId","InTurn","in_turn","gap","Content","tranHistory","obj","type","amount","currency","DopClass","Transactions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.118a1282.chunk.js","sourcesContent":["\r\nfunction UserAvatar(props) {\r\n\r\n  let name = props.name ? props.name : 'Petra Marica'\r\n  let avatar =  props.avatar  ? props.avatar : \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\"\r\n      \r\n  if (name && avatar)\r\n    return (\r\n      <img\r\n        src={ avatar }\r\n        alt={ name }\r\n        // class={props.className}\r\n        className=\"avatarImg\"\r\n      />            \r\n    );\r\n  \r\n}\r\n\r\nexport default UserAvatar;\r\n","// import UserAvatar from './UserAvatar.jsx';\r\n\r\nfunction DescriptionBox(props) {\r\n\r\n  let name = props.name ? props.name : 'Petra Marica' \r\n  let content = props.content ? props.content : '' \r\n\r\n  if (name && content)\r\n    return (         \r\n          <p className={name}>{content}</p>        \r\n    );\r\n  \r\n}\r\n\r\nexport default DescriptionBox;\r\n","import UserAvatar from './UserAvatar.jsx';\r\nimport DescriptionBox from './DescriptionBox.jsx';\r\n\r\nfunction Description(props) {\r\n\r\n\r\n  let name = props.name ? props.name : 'Petra Marica'\r\n  let tag = props.tag ? props.tag : '@pmarica'\r\n  let location = props.location ? props.location : 'Salvador, Brasil'\r\n  let avatar =  props.avatar  ? props.avatar : \"https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg\"\r\n\r\n  return (   \r\n      <div className=\"description\">\r\n      \r\n      <UserAvatar avatar={ avatar } name={ name } />\r\n      \r\n      \r\n      <DescriptionBox name=\"name\" content={ name }/>\r\n      <DescriptionBox name=\"tag\" content={ tag } />\r\n      <DescriptionBox name=\"location\" content={ location } />\r\n      \r\n      </div>    \r\n  );\r\n}\r\n\r\nexport default Description;\r\n","\r\nfunction ContactList(props) {\r\n\r\n\r\n  let label = props.label ? props.label : '-'\r\n  let quantity = props.quantity ? props.quantity : '-'\r\n\r\n  if (label && quantity) \r\n    return (\r\n      <li>\r\n        <span className=\"label\">{label}</span>\r\n        <span className=\"quantity\">{quantity}</span>\r\n      </li>\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import ContactItem from './ContactItem.jsx';\r\n\r\nfunction ContactList(props) {\r\n\r\n  let followers = props.stats.followers ? props.stats.followers : 0\r\n  let views = props.stats.views ? props.stats.views : 0\r\n  let likes = props.stats.likes ? props.stats.likes : 0\r\n\r\n  return (\r\n        <ul className=\"stats\">\r\n          <ContactItem label = 'Followers' quantity = {followers} />\r\n          <ContactItem label = 'Views' quantity = {views} />\r\n          <ContactItem label = 'likes' quantity = {likes} />\r\n      \r\n        </ul>\r\n\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import user from './user.json';\r\nimport Description from './Description.jsx';\r\nimport ContactList from './ContactList.jsx';\r\nimport './UserCard.css';\r\n\r\n\r\n\r\n\r\nfunction CreateUserCard(props) {\r\n  \r\n  return (\r\n    <div  className=\"profile\">\r\n      \r\n      <Description\r\n        name={user.name}\r\n        tag={user.tag}\r\n        avatar={user.avatar}\r\n        location={user.location}        \r\n      />\r\n\r\n      <ContactList\r\n        stats={user.stats} />\r\n      </div> \r\n\r\n  );\r\n}\r\n\r\nexport default CreateUserCard;\r\n\r\n","const colorArr = ['#0081b7', '#6303af', '#940014', '#007d89']\r\n\r\nfunction Color (n = colorArr.length-1, max = colorArr.length-1) {\r\n  let count = n\r\n    return function nameColor() {\r\n        if (count < 0) count = max\r\n        return colorArr[count--]\r\n      }\r\n \r\n  }\r\n\r\n\r\nlet colorNext = Color()\r\n\r\n\r\nfunction StatList(props) {\r\n\r\n  let i = 0\r\n  const datalist = props.data.length !== 0 ? props.data : [{ \"id\": \"id_test\", \"label\": \".test\", \"percentage\": '--' }]\r\n \r\n  return (   \r\n    <ul className=\"stat-list\">\r\n      \r\n      {datalist.map(iterator => {\r\n\r\n        const id = iterator.id ? iterator.id.toString() : 'id-z0'+(++i);\r\n        const label = iterator.label ? iterator.label : 'missing label'\r\n        const percentage = iterator.percentage ? iterator.percentage : 'missing percentage'\r\n         \r\n        \r\n        return (\r\n          < li\r\n            id={id}\r\n            key={id}\r\n            className=\"item\"\r\n            style={{ backgroundColor: colorNext() }}\r\n          >\r\n          <span className=\"label\">{ label }</span>\r\n          <span className=\"percentage\">{percentage}%</span>\r\n          \r\n          </li>)\r\n         \r\n        })}\r\n\r\n    </ul>\r\n  );\r\n}\r\n\r\n// export default StatList;\r\nexport { StatList as default }","import './statistics.css';\r\nimport StatList from './StatList.jsx'\r\nimport dataItem from './statistical-data.json'\r\n\r\n\r\n\r\nfunction Statistics() {\r\n  \r\n  return (\r\n    <div className='statisticsBox'>\r\n      <section className=\"statistics\">\r\n        <h2 className=\"title\">Upload stats</h2>\r\n        \r\n        <StatList data={dataItem}/>\r\n        \r\n      </section>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Statistics;","\r\nimport friends from './friends.json';\r\n\r\nfunction Li_friendList() {\r\n\r\n    return (\r\n\r\n        friends.map(elem => {\r\n           const avatar = elem.avatar \r\n           const name = elem.name \r\n           const isOnline = elem.isOnline === true ? 'on_line' : 'off_line' \r\n            \r\n\r\n            return (\r\n                <li key={ `${avatar}+${name}` } className={ 'itemFriends '+isOnline }>\r\n                    <span className=\"status\">{ isOnline }</span>\r\n                    <img className=\"avatar\"\r\n                        src={avatar}\r\n                        alt={ name }\r\n                        width=\"48\" />\r\n                    <p className=\"name\">{ name }</p>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default Li_friendList;","import './friends.css';\r\nimport Li_friendList from './Li_friendList.jsx'\r\n\r\n\r\n\r\nfunction FriendList() {\r\n    return(    \r\n        <ul className=\"friend-list\">            \r\n            <Li_friendList />\r\n        </ul>\r\n    )\r\n    \r\n}\r\n\r\nexport default FriendList;","import tranHistory from './transactions.json'\r\n\r\n\r\n// let colN = Color()\r\nfunction LetId (n = 0) {\r\n    let lostId = n\r\n    return function nameId() {        \r\n        return (\r\n            'missing_id_:(_()_=>_custom_id=z0' + lostId++\r\n        )\r\n    }\r\n}\r\n\r\nlet CastomId = LetId()\r\n\r\nfunction gap() {\r\n    let in_turn = false\r\n    return () => in_turn ? in_turn = false :  in_turn = true     \r\n}\r\n\r\nlet InTurn = gap()\r\n\r\n\r\nfunction Content() {\r\n\r\n\r\n    return (\r\n        \r\n            \r\n        tranHistory.map(obj => {\r\n            const id = obj.id ? obj.id.toString() : CastomId(); \r\n            const type = obj.type ? obj.type : 'missing type'\r\n            const amount = obj.amount ? obj.amount : 'missing amount'\r\n            const currency = obj.currency ? obj.currency : 'missing currency'\r\n            const DopClass = InTurn() ? 'in_turn' : 'clasic'\r\n            \r\n                    \r\n\r\n            return(\r\n                <tr key={id} id={id} className={ DopClass }>\r\n                <td>{ type }</td>\r\n                <td>{ amount }</td>\r\n                <td>{ currency }</td>\r\n            </tr>\r\n            )\r\n                })\r\n            \r\n\r\n            \r\n       \r\n    )\r\n}\r\n\r\nexport default Content","import Content from './Content.jsx'\r\nimport './transactions.css'\r\n\r\nfunction Transactions() {\r\n    return(\r\n        <table className=\"transaction-history\">\r\n            <thead>\r\n                <tr>\r\n                <th>Type</th>\r\n                <th>Amount</th>\r\n                <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <Content />\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Transactions","import './App.css';\r\nimport CreateUserCard from './users/CreateUserCard.jsx';\r\nimport Statistics from './statistics/CreateStatistics.jsx';\r\nimport FriendList from './FriendList/CreateFriendList.jsx';\r\nimport Transactions from './Transactions/CreateTransactions.jsx';\r\n\r\n\r\n\r\nfunction App() { \r\n  \r\n  return (\r\n    <>\r\n      <CreateUserCard />\r\n      <Statistics />\r\n      <FriendList />\r\n      <Transactions />\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}